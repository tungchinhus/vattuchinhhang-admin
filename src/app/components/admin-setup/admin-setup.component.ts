import { Component, OnInit, Inject } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { UsersService } from '../../services/users.service';
import { UserRole } from '../../models/user.model';

@Component({
  selector: 'app-admin-setup',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <div class="admin-setup">
      <h1>Thi·∫øt l·∫≠p Admin</h1>
      
      <div class="setup-info">
        <h2>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</h2>
        <p>ƒê·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng qu·∫£n l√Ω ng∆∞·ªùi d√πng, b·∫°n c·∫ßn c√≥ √≠t nh·∫•t m·ªôt t√†i kho·∫£n admin trong h·ªá th·ªëng.</p>
        
        <div class="warning">
          <h3>üîí V·∫•n ƒë·ªÅ hi·ªán t·∫°i:</h3>
          <ul>
            <li>Firestore rules y√™u c·∫ßu admin role ƒë·ªÉ t·∫°o user m·ªõi</li>
            <li>Nh∆∞ng ch∆∞a c√≥ admin n√†o trong database</li>
            <li>C·∫ßn t·∫°o admin user ƒë·∫ßu ti√™n th·ªß c√¥ng</li>
          </ul>
        </div>
        
        <div class="solution">
          <h3>üí° Gi·∫£i ph√°p:</h3>
          <ol>
            <li>T·∫°o admin user ƒë·∫ßu ti√™n b·∫±ng c√°ch s·ª≠a Firestore rules t·∫°m th·ªùi</li>
            <li>Ho·∫∑c t·∫°o admin user tr·ª±c ti·∫øp trong Firebase Console</li>
            <li>Sau ƒë√≥ c√≥ th·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng qu·∫£n l√Ω ng∆∞·ªùi d√πng b√¨nh th∆∞·ªùng</li>
          </ol>
        </div>
        
        <div class="manual-steps">
          <h3>üìã C√°c b∆∞·ªõc th·ª±c hi·ªán:</h3>
          <div class="step">
            <h4>B∆∞·ªõc 1: T·∫°o admin user trong Firebase Console</h4>
            <ol>
              <li>Truy c·∫≠p <a href="https://console.firebase.google.com/project/vattuchinhhang-c5952/firestore" target="_blank">Firebase Console</a></li>
              <li>V√†o Firestore Database</li>
              <li>T·∫°o collection "users"</li>
              <li>Th√™m document v·ªõi ID l√† UID c·ªßa b·∫°n</li>
              <li>Th√™m c√°c field:
                <pre>
{{ '{' }}
  "name": "Admin User",
  "email": "admin@example.com", 
  "role": "admin",
  "createdAt": "2024-01-01T00:00:00Z"
{{ '}' }}
                </pre>
              </li>
            </ol>
          </div>
          
          <div class="step">
            <h4>B∆∞·ªõc 2: Test ch·ª©c nƒÉng</h4>
            <ol>
              <li>Refresh trang web</li>
              <li>Th·ª≠ t·∫°o user m·ªõi</li>
              <li>Ki·ªÉm tra xem c√≥ ho·∫°t ƒë·ªông kh√¥ng</li>
            </ol>
          </div>
        </div>
        
        <div class="alternative">
          <h3>üîÑ C√°ch kh√°c: S·ª≠a rules t·∫°m th·ªùi</h3>
          <p>N·∫øu mu·ªën t·∫°o admin user t·ª´ ·ª©ng d·ª•ng, c√≥ th·ªÉ s·ª≠a firestore.rules t·∫°m th·ªùi:</p>
          <pre>
// Thay ƒë·ªïi d√≤ng n√†y trong firestore.rules:
allow create: if request.auth != null; // Cho ph√©p t·∫•t c·∫£ user ƒë√£ ƒëƒÉng nh·∫≠p t·∫°o user
          </pre>
          <p>Sau khi t·∫°o admin user ƒë·∫ßu ti√™n, nh·ªõ ƒë·ªïi l·∫°i rules nh∆∞ c≈©.</p>
        </div>
      </div>
      
      <div class="actions">
        <button (click)="refreshPage()" class="btn btn-primary">
          üîÑ Refresh trang
        </button>
        <a href="https://console.firebase.google.com/project/vattuchinhhang-c5952/firestore" target="_blank" class="btn btn-secondary">
          üîó M·ªü Firebase Console
        </a>
      </div>
    </div>
  `,
  styles: [`
    .admin-setup {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .setup-info {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    
    .setup-info h2 {
      color: #dc3545;
      margin-top: 0;
    }
    
    .warning {
      background: #f8d7da;
      border: 1px solid #f5c6cb;
      padding: 20px;
      border-radius: 4px;
      margin: 20px 0;
    }
    
    .warning h3 {
      color: #721c24;
      margin-top: 0;
    }
    
    .solution {
      background: #d4edda;
      border: 1px solid #c3e6cb;
      padding: 20px;
      border-radius: 4px;
      margin: 20px 0;
    }
    
    .solution h3 {
      color: #155724;
      margin-top: 0;
    }
    
    .manual-steps {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 4px;
      margin: 20px 0;
    }
    
    .step {
      margin: 20px 0;
    }
    
    .step h4 {
      color: #333;
      margin-bottom: 10px;
    }
    
    .step ol {
      margin: 10px 0;
      padding-left: 20px;
    }
    
    .step li {
      margin: 5px 0;
    }
    
    .step pre {
      background: #e9ecef;
      padding: 10px;
      border-radius: 4px;
      font-size: 12px;
      margin: 10px 0;
    }
    
    .alternative {
      background: #fff3cd;
      border: 1px solid #ffeaa7;
      padding: 20px;
      border-radius: 4px;
      margin: 20px 0;
    }
    
    .alternative h3 {
      color: #856404;
      margin-top: 0;
    }
    
    .alternative pre {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 4px;
      font-size: 14px;
      margin: 10px 0;
    }
    
    .actions {
      text-align: center;
      display: flex;
      gap: 15px;
      justify-content: center;
    }
    
    .btn {
      display: inline-block;
      padding: 12px 24px;
      background-color: #007bff;
      color: white;
      text-decoration: none;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
      font-weight: 500;
    }
    
    .btn:hover {
      background-color: #0056b3;
    }
    
    .btn-secondary {
      background-color: #6c757d;
    }
    
    .btn-secondary:hover {
      background-color: #545b62;
    }
  `]
})
export class AdminSetupComponent implements OnInit {
  constructor(
    @Inject(UsersService) private usersService: UsersService
  ) {}

  ngOnInit() {
    // Component setup admin
  }

  refreshPage() {
    window.location.reload();
  }
}
